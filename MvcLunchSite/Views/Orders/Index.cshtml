@using Microsoft.AspNet.Identity
@model MvcLunchSite.Models.Order
@{ var orderList = (List<MvcLunchSite.Models.Order>)ViewData["OrderList"];}
@{ var list = (List<MvcLunchSite.Models.ApplicationUser>)ViewData["UserList"]; }
@{ var restaurantList = (List<MvcLunchSite.Models.Restaurant>)ViewData["RestaurantList"];}
@{ var TopScoresList = (List<string>)ViewData["TopScoresList"];}
@{
    ViewBag.Title = "Index";
}


@{
    List<SelectListItem> listNumber = new List<SelectListItem>();
    listNumber.Add(new SelectListItem { Value = "-1", Text = " " });
    foreach (var item in restaurantList)
    {
        listNumber.Add(new SelectListItem { Value = item.ID.ToString(), Text = item.name });
    }
}
@{
    <h2>Order</h2>
    MvcLunchSite.Models.ApplicationUser currUser = list.Find(x => x.UserName == User.Identity.Name);
    if (currUser != null)
    {
        if (currUser.Role.ToLower() == "orderer" || currUser.Role.ToLower() == "admin" || currUser.Role.ToLower() == "superuser")//checks that user has proper clearance to view orders
        {
            <script type="text/javascript">
                function printDisp(divName){
                    var toPrint = document.getElementById(divName).innerHTML;
                    var currPage = document.body.innerHTML;
                    document.body.innerHTML=toPrint;
                    window.print();
                    document.body.innerHTML=currPage;
                }
            </script>
            <div>
                @Html.DropDownList("filterList", listNumber, new { @onchange = "changeDisp()" })
                <button id="btnVote" type="submit" onclick="printDisp('toPrint')" style="height:25px;width:120px;background:black;color:white;border:none">Print</button>
                <br />
            </div>
            @*updating the page based on dropdown choice*@
            <script type="text/javascript">
                function changeDisp() {
                    //div that orders are displayed into
                    var section = document.getElementById("toPrint");
                    section.innerHTML = null;
                    //dropdownlist
                    var dropList = document.getElementById("filterList");
                    //dropdownlist text
                    var dropText = dropList.options[dropList.selectedIndex].text;
                    //store lists into arrays to be used in loops
                    var myRestList = @Html.Raw(Json.Encode((List<MvcLunchSite.Models.Restaurant>)ViewData["RestaurantList"]));
                    var myUseList = @Html.Raw(Json.Encode((List<MvcLunchSite.Models.ApplicationUser>)ViewData["UserList"]));
                    var myOrdList = @Html.Raw(Json.Encode((List<MvcLunchSite.Models.Order>)ViewData["OrderList"]));
                    console.log(myOrdList);
                    //used to store html string to be used for body
                    var toStoreInSec="";

                    var currTotal=0.0;
                    for(var resSpot = 0; resSpot < myRestList.length; resSpot++){
                        if(dropText == myRestList[resSpot].name || dropText.trim() == ""){
                            toStoreInSec += '<strong>' +myRestList[resSpot].name+'</strong>'
                                + '<ul>';
                            for( var useSpot = 0; useSpot < myUseList.length; useSpot++){
                                //if dropdownlist text matches restaurant or the dropdownlist is on the empty value

                                toStoreInSec+='<li>'
                                + myUseList[useSpot].UserName + '<ul>';
                                for (var ordSpot = 0; ordSpot < myOrdList.length; ordSpot++){
                                    if(myOrdList[ordSpot].userID == myUseList[useSpot].Id && myOrdList[ordSpot].restaurantID == myRestList[resSpot].ID){
                                        toStoreInSec+='<li>'
                                            +myOrdList[ordSpot].menuItemName+ ' --- ' + myOrdList[ordSpot].ItemPrice + '<ul>';
                                        currTotal+=parseFloat(myOrdList[ordSpot].ItemPrice);

                                        if(myOrdList[ordSpot].customization != null){
                                            toStoreInSec+=myOrdList[ordSpot].customization;
                                        }
                                        toStoreInSec+='</ul></li>';
                                    }
                                }
                                toStoreInSec+='</ul></li>';
                            }

                            toStoreInSec+='</ul>'
                            +'<strong> Total:'+ currTotal.toFixed(2)+'</strong><br/><br/>';
                        }
                    }
                    //update page with new html
                    section.innerHTML += toStoreInSec;
                }
            </script>
            <div id="toPrint">
                @foreach (var rest in restaurantList) //var user in list)
                {
                    var currTotal = 0.0;
                    <strong>
                        @rest.name
                    </strong>
                    <ul>
                        @foreach (var user in list)
                        {
                            <li>
                                @user.UserName
                                <ul>
                                    @foreach (var item in orderList)
                                    {
                                        if (item.userID == user.Id && item.restaurantID == rest.ID.ToString())
                                        {
                                            <li>
                                                @{
                                                    currTotal += double.Parse(item.ItemPrice);
                                                }
                                                @item.menuItemName --- @item.ItemPrice
                                                <ul>
                                                    @if (item.customization != "")
                                                    {
                                                        @item.customization
                                                    }

                                                </ul>
                                            </li>
                                                        }
                                                    }
                                </ul>
                            </li>
                                                    }
                    </ul>
                    <strong> Total: @currTotal</strong>
                        <br />
                        <br />
                                                    }
            </div>
                                                        }
                                                    }
}
